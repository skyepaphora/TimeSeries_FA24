---
title: "Workshop 1: Welcome!"
subtitle: "STAT 464/864 Discrete Time Series Analysis"
author: "Skye P. Griffith, Queen's University"
format: pdf
---

# Markdown

"Markdown" is a simple syntax that allows you to stylize your document and its text entirely through the use of symbols.

Block quote

...block quote continued

Italic font

Bold font

Use 1 to 4 hashtags to make a **header.** More hashtags = *smaller* header! You'll need to use headers to organize your assignments and reports for this class.\

**Example: 1**  Say problem 1 has parts a), b) and c)

[ANSWER]

# Chunks

To include R code in your document, you'll need to distinguish it from text. To do this, create a "chunks" using the back-tick ` character (same key as the \~ key on your keyboard).

#### Example 2
Let's generate 10 observations from a $\mathcal{N}(0,1)$ distribution, then print and plot their values.

> *The values will be printed, and the plot will appear as a figure in our final document.*

[ANSWER]

That's the whole reason we're doing this. The content of your homework submissions will be the output of your actual code. It will *update* every time you render the document (this is called **dynamic output**). That means, if you're generating **random data,** your plots will look different every time. It also means you can't have any typos in your code, or else your document won't render!

You can also create LaTeX chunks to type math equations.

[MEAN OF RANDOM VECTOR X]

---
# Working directory

So... you type in a .qmd file, you produce a .pdf file, and a bunch of weird files are generated and erased during the rendering process. We're about to start using images and datasets, too. You're going to want to store all this stuff in the same folder: this will be your *working directory.* 

I like to make a new folder (directory) for each project I work on, but if you want, you can get away with making a single folder for this course. Once you have your desired folder, the easiest thing to do is to create an R project (file -> new R project) inside that folder.

You can set your working directory by clicking the gear in the RStudio "files" pane, or, you can set it manually like this:

[ANSWER]

# Inserting images

If you're not familiar with LaTeX, you probably don't want to type out all the actual *math* in your homework solutions. Save your handwritten solutions as a .png file **in your working directory.**

#### Example 3:
Upload your handwritten solution for part a) of some homework problem

#### Part a)
The exponential smoother is:

[ANSWER]

You can also add captions to figures, if you want.

[ANSWER]

{{< pagebreak >}}

# Importing Data

Randomly generated data is fun and all that, but we'll mostly want to use *real data* in our documents. Save your desired dataset **in your working directory,** and then load it like so:

[ANSWER]

And here we can plot the data:

[ANSWER]

# Tips, Tricks, and Troubleshooting

We'll go over some of these if we get a chance to. If not, I recommend you read this section on your own time.

#### In-line code
Recall that we generated the variable `x` randomly. We can display those values in-line by creating a mini-chunk, which is also capable of dynamic output.

> *The 5th observation in the vector * `x` is [ANSWER]

#### Knitting errors

* Documents always render based on an **empty environment.** Imagine you are sending your code to a friend and they have to run it from scratch. 
* Try knitting *every time you finish a new chunk.* Debugging one chunk at a time is easiest, especially when you're learning. 
* \underline{Name} your chunks so you can find them easier
* *Read* the \textcolor{red}{error text}: what *line* does Quarto say the error is located? What *chunk?*

#### Formatting errors
If your markdown syntax is bugging out, try leaving one line of **vertical space** between:

* Headers
* Chunks
* Paragraphs
* LaTeX Equation environments (double dollar signs)
* Lists (like this one) but not list *items*

#### Creating a Table

This might be handy for displaying output like model coefficients and p-values in your final report.
It's compatible with in-line code, too.

| A  | B    | C    | D    | E  | F  |
|:---|:-----|:----:|-----:|:---|:---|
| a1 | b1   | c1   | d1   | e1 | f1 |
| a2 | b2   | c2   | d2   | e2 | f2 |
| a3 | b3   | c3   | d3   | e3 | f3 |
| a4 | b4   | c4   | d4   | e4 | f4 |

Notice the alignment of the columns is controlled by the placement of the colon (:)











